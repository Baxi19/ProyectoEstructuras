/* * * * * * * * * * * * * * * * * * * * * * * *
 * Instituto Tecnológico de Costa Rica         *
 * Data structures                             *
 * 1st Project: Domino´s game                  *
 * by: Fabián Zamora R. and Randald Villegas B.*
 * * * * * * * * * * * * * * * * * * * * * * * */

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author Fabián
 */
public class WindowRegister extends javax.swing.JFrame {

    /**
     * Creates new form WindowRegister
     */
    public WindowRegister() {
        this.setTitle("Register");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelName = new javax.swing.JLabel();
        labelPassword = new javax.swing.JLabel();
        labelConfirmPassword = new javax.swing.JLabel();
        textFieldPassword = new javax.swing.JTextField();
        textFieldName = new javax.swing.JTextField();
        textFieldConfirmPassword = new javax.swing.JTextField();
        singInButton = new javax.swing.JButton();
        buttonBack = new javax.swing.JButton();
        gifDomino = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(480, 310));
        getContentPane().setLayout(null);

        labelName.setBackground(new java.awt.Color(255, 255, 255));
        labelName.setFont(new java.awt.Font("Script MT Bold", 1, 18)); // NOI18N
        labelName.setForeground(new java.awt.Color(255, 255, 255));
        labelName.setText("Name:");
        getContentPane().add(labelName);
        labelName.setBounds(320, 10, 55, 23);

        labelPassword.setBackground(new java.awt.Color(255, 255, 255));
        labelPassword.setFont(new java.awt.Font("Script MT Bold", 1, 18)); // NOI18N
        labelPassword.setForeground(new java.awt.Color(255, 255, 255));
        labelPassword.setText("Password:");
        getContentPane().add(labelPassword);
        labelPassword.setBounds(290, 60, 85, 23);

        labelConfirmPassword.setFont(new java.awt.Font("Script MT Bold", 1, 18)); // NOI18N
        labelConfirmPassword.setForeground(new java.awt.Color(255, 255, 255));
        labelConfirmPassword.setText("Confirm  password:");
        getContentPane().add(labelConfirmPassword);
        labelConfirmPassword.setBounds(210, 110, 160, 23);

        textFieldPassword.setBackground(new java.awt.Color(153, 153, 153));
        getContentPane().add(textFieldPassword);
        textFieldPassword.setBounds(380, 60, 90, 30);

        textFieldName.setBackground(new java.awt.Color(153, 153, 153));
        getContentPane().add(textFieldName);
        textFieldName.setBounds(380, 10, 90, 30);

        textFieldConfirmPassword.setBackground(new java.awt.Color(153, 153, 153));
        getContentPane().add(textFieldConfirmPassword);
        textFieldConfirmPassword.setBounds(380, 110, 90, 30);

        singInButton.setBackground(new java.awt.Color(204, 204, 204));
        singInButton.setText("Sing In");
        singInButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        singInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singInButtonActionPerformed(evt);
            }
        });
        getContentPane().add(singInButton);
        singInButton.setBounds(380, 160, 90, 30);

        buttonBack.setBackground(new java.awt.Color(204, 204, 204));
        buttonBack.setText("Back");
        buttonBack.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });
        getContentPane().add(buttonBack);
        buttonBack.setBounds(10, 240, 40, 30);

        gifDomino.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progra1/images/dominoChain.gif"))); // NOI18N
        gifDomino.setText("jLabel1");
        gifDomino.setMaximumSize(new java.awt.Dimension(538, 282));
        gifDomino.setMinimumSize(new java.awt.Dimension(538, 282));
        gifDomino.setPreferredSize(new java.awt.Dimension(538, 282));
        getContentPane().add(gifDomino);
        gifDomino.setBounds(0, 0, 490, 280);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void singInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singInButtonActionPerformed
        // TODO add your handling code here:
        String name, password, confirmPassword;
        if(textFieldName.getText().isEmpty() | textFieldPassword.getText().isEmpty() | textFieldConfirmPassword.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Field empty.");
        }
        else if(ListPlayersRegistered.getInstance().searchPlayer(textFieldName.getText()) != null){
            JOptionPane.showMessageDialog(rootPane, "That nickname already exists, try with: " + textFieldName.getText() + 1 );   
        }
        else{
            if(textFieldPassword.getText().equals(textFieldConfirmPassword.getText())){
                name = textFieldName.getText();
                password = textFieldPassword.getText();
                Player newP = ListPlayersRegistered.getInstance().insertFinal(name, password, 0);
                newP.setAnt(null);
                newP.setSig(null);
                savePlayer(newP);
                textFieldName.setText("");
                textFieldPassword.setText("");
                textFieldConfirmPassword.setText("");
                JOptionPane.showMessageDialog(rootPane, "Player " + name +" successfully registered.");
            }
            else{
                JOptionPane.showMessageDialog(rootPane, "Please, confirm your password.");
            }       
        }
    }//GEN-LAST:event_singInButtonActionPerformed

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_buttonBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WindowRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WindowRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WindowRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WindowRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WindowRegister().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JLabel gifDomino;
    private javax.swing.JLabel labelConfirmPassword;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JButton singInButton;
    private javax.swing.JTextField textFieldConfirmPassword;
    private javax.swing.JTextField textFieldName;
    private javax.swing.JTextField textFieldPassword;
    // End of variables declaration//GEN-END:variables

    
    //this method save the new player into textfile
    public void savePlayer(Player newPlayer){
        String playerToRegister = JsonUtil.converPlayerToJson(newPlayer);
         try {
            FileWriter writer = new FileWriter("Players.txt", true);
            BufferedWriter bufferedWriter = new BufferedWriter(writer);
            bufferedWriter.write(playerToRegister);
            bufferedWriter.newLine();     
            bufferedWriter.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
         System.out.println("Player: " + newPlayer.name + " succesfully saved in text file 'Players.txt'.");
    }
}
